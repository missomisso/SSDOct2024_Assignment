import { Client } from '../../Client';
import { LocationParams, ListAccommodationParams, StaysAccommodationSuggestion, StaysAccommodation } from '../StaysTypes';
import { Resource } from '../../Resource';
import { DuffelResponse } from '../../types';
export declare class Accommodation extends Resource {
    /**
     * Endpoint path
     */
    path: string;
    constructor(client: Client);
    /**
     * Get suggestions for accommodation given a query string.
     * @param {string} query - The query string for the search
     */
    suggestions: (query: string, location?: LocationParams) => Promise<DuffelResponse<StaysAccommodationSuggestion[]>>;
    /**
     * Get information about an accommodation with a specific Duffel ID
     * @param {string} id - The Duffel ID of the Accommodation
     */
    get: (id: StaysAccommodation['id']) => Promise<DuffelResponse<StaysAccommodation>>;
    /**
     * Retrieves a page of accommodation.
     * @param {Object.<ListAccommodationParams>} params - Endpoint options (radius, latitude, longitude, before, after, limit)
     * @link https://duffel.com/docs/api/v2/accommodation/list-accommodation
     */
    list: (params: ListAccommodationParams) => Promise<DuffelResponse<StaysAccommodation[]>>;
    /**
     * Retrieves a generator of accommodation pages given the criteria in the params.
     * @param {Object.<ListAccommodationParams>} params - Endpoint options (radius, latitude, longitude, before, after, limit)
     * @link https://duffel.com/docs/api/v2/accommodation/list-accommodation
     */
    listWithGenerator: (params: ListAccommodationParams) => AsyncGenerator<DuffelResponse<StaysAccommodation[]>>;
}
